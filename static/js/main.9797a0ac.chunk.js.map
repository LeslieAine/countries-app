{"version":3,"sources":["styles/Countries.module.css","styles/Country.module.css","styles/Navbar.module.css","redux/countries/countriesSlice.js","components/Country.js","components/Countries.js","components/Details.js","components/Navbar.js","App.js","redux/store.js","index.js","styles/Details.module.css"],"names":["module","exports","countries","title","select","dropdown","country","flag","countryName","link","back","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","fetchCountries","createAsyncThunk","_asyncToGenerator","_callee","response","_context","axios","get","data","map","official","population","capital","area","flagEmoji","flagPng","flags","png","flagSvg","svg","flagAlt","alt","continent","continents","timezones","maps","googleMaps","subregion","countriesSlice","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","payload","Country","_ref","React","createElement","Link","to","concat","className","styles","Countries","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setContinent","useEffect","id","onChange","e","target","filter","Details","countryId","useParams","find","c","Fragment","flagContainer","src","details","detail","detailName","detailValue","toLocaleString","timezone","Navbar","location","useLocation","navbar","NavLink","pathname","IoChevronBack","Outlet","App","BrowserRouter","basename","process","Routes","Route","path","element","store","configureStore","require","reducer","countriesReducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","countryDetails"],"mappings":"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","file":"static/js/main.9797a0ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"countries\":\"Countries_countries__hj3db\",\"title\":\"Countries_title__26ZVk\",\"select\":\"Countries_select__2LUbW\",\"dropdown\":\"Countries_dropdown__1blzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country\":\"Country_country__2W0Ka\",\"flag\":\"Country_flag__1NbtO\",\"countryName\":\"Country_countryName__3yaUf\",\"link\":\"Country_link__THZVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"Navbar_back__wVFwk\"};","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = [];\n\nexport const fetchCountries = createAsyncThunk('countries/fetchCountries', async () => {\n  const response = await axios.get('https://restcountries.com/v3.1/all');\n  return response.data.map((country) => ({\n    name: country.name.official,\n    population: country.population,\n    capital: country.capital,\n    area: country.area,\n    flagEmoji: country.flag,\n    flagPng: country.flags.png,\n    flagSvg: country.flags.svg,\n    flagAlt: country.flags.alt,\n    continent: country.continents[0],\n    timezones: country.timezones,\n    maps: country.maps.googleMaps,\n    subregion: country.subregion,\n  }));\n});\n\nconst countriesSlice = createSlice({\n  name: 'countries',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCountries.fulfilled, (state, action) => action.payload);\n  },\n});\n\nexport default countriesSlice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from '../styles/Country.module.css';\n\nconst Country = ({ name, flagEmoji, continent }) => (\n  <Link to={`/country/${name}`} className={styles.link}>\n    <li className={styles.country}>\n      <h2 className={styles.countryName}>\n        {name}\n        <br />\n        {flagEmoji}\n      </h2>\n      <p>\n        {continent}\n      </p>\n    </li>\n  </Link>\n);\n\nCountry.propTypes = {\n  name: PropTypes.string.isRequired,\n  flagEmoji: PropTypes.string.isRequired,\n  continent: PropTypes.string.isRequired,\n};\n\nexport default Country;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCountries } from '../redux/countries/countriesSlice';\nimport Country from './Country';\nimport styles from '../styles/Countries.module.css';\n\nconst Countries = () => {\n  const dispatch = useDispatch();\n  const countries = useSelector((state) => state.countries);\n\n  const [continent, setContinent] = useState('all');\n\n  useEffect(() => {\n    if (countries.length === 0) {\n      dispatch(fetchCountries());\n    }\n  }, [countries, dispatch]);\n\n  return (\n    <div>\n      <h1 className={styles.title}>Countries</h1>\n      <div className={styles.dropdown}>\n        <select\n          name=\"continents\"\n          id=\"continents\"\n          className={styles.select}\n          onChange={(e) => setContinent(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"Africa\">Africa</option>\n          <option value=\"Asia\">Asia</option>\n          <option value=\"Europe\">Europe</option>\n          <option value=\"North America\">North America</option>\n          <option value=\"Oceania\">Oceania</option>\n          <option value=\"South America\">South America</option>\n          <option value=\"Antarctica\">Antarctica</option>\n        </select>\n      </div>\n      <ul className={styles.countries}>\n        {countries.filter((country) => {\n          if (continent === 'all') {\n            return country;\n          }\n          return country.continent === continent;\n        }).map((country) => (\n          <Country\n            key={country.name}\n            name={country.name}\n            continent={country.continent}\n            flagEmoji={country.flagEmoji}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Countries;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchCountries } from '../redux/countries/countriesSlice';\nimport styles from '../styles/Details.module.css';\n\nconst Details = () => {\n  const { countryId } = useParams();\n  const dispatch = useDispatch();\n  const countries = useSelector((state) => state.countries);\n\n  useEffect(() => {\n    if (countries.length === 0) {\n      dispatch(fetchCountries());\n    }\n  }, [countries, dispatch]);\n\n  const country = countries.find((c) => c.name === countryId);\n\n  return (\n    <>\n      {country && (\n      <div className={styles.Details}>\n        <div className={styles.flagContainer}>\n          <img src={country.flagSvg} alt={country.flagAlt} className={styles.flag} />\n          <h1 className={styles.name}>{country.name}</h1>\n        </div>\n        <ul className={styles.details}>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Capital:</span>\n            {' '}\n            <span className={styles.detailValue}>{country.capital}</span>\n          </li>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Subregion:</span>\n            {' '}\n            <span className={styles.detailValue}>{country.subregion}</span>\n          </li>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Population:</span>\n            {' '}\n            <span className={styles.detailValue}>{country.population.toLocaleString()}</span>\n          </li>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Area:</span>\n            {' '}\n            <span className={styles.detailValue}>\n              {country.area}\n              {' '}\n              km²\n            </span>\n          </li>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Timezones:</span>\n            {' '}\n            <span className={styles.detailValue}>\n              {country.timezones.map((timezone) => (\n                <span key={timezone} className={styles.timezone}>{timezone}</span>\n              ))}\n            </span>\n          </li>\n          <li className={styles.detail}>\n            <span className={styles.detailName}>Maps:</span>\n            {' '}\n            <span className={styles.detailValue}>{country.maps}</span>\n          </li>\n        </ul>\n      </div>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { IoChevronBack } from 'react-icons/io5';\nimport styles from '../styles/Navbar.module.css';\n\nconst Navbar = () => {\n  const location = useLocation();\n\n  return (\n    <div className={styles.navbar}>\n      <NavLink to=\"/\" className={styles.link}>\n        { location.pathname !== '/' && <IoChevronBack className={styles.back} /> }\n      </NavLink>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Countries from './components/Countries';\nimport Details from './components/Details';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route path=\"/\" element={<Navbar />}>\n            <Route path=\"/\" element={<Countries />} />\n            <Route path=\"/country/:countryId\" element={<Details />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import countriesReducer from './countries/countriesSlice';\n\nconst { configureStore } = require('@reduxjs/toolkit');\n\nconst store = configureStore({\n  reducer: {\n    countries: countriesReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Details\":\"Details_Details__1Yc3H\",\"flag\":\"Details_flag__1dau3\",\"name\":\"Details_name__1L477\",\"details\":\"Details_details__B1iAQ\",\"detailName\":\"Details_detailName__1XSIA\",\"detailValue\":\"Details_detailValue__3X7w_\",\"timezone\":\"Details_timezone__2-lUD\",\"countryDetails\":\"Details_countryDetails__3gQ2j\",\"flagContainer\":\"Details_flagContainer__prMTN\"};"],"sourceRoot":""}